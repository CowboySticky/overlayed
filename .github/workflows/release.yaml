name: "Release"
on:
  # Allow manual
  workflow_dispatch:
  push:

jobs:
  build-tauri:
    strategy:
      fail-fast: false
      matrix:
        include:
          # - os: ubuntu-latest
          #   target: x86_64-unknown-linux-gnu
          #   exe_name: overlayed
          - os: macos-latest
            target: aarch64-apple-darwin
            exe_name: overlayed
          # - os: windows-latest
          #   target: x86_64-pc-windows-msvc
          #   exe_name: overlayed.exe
    runs-on: ${{ matrix.os }}
    env:
      GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      EXE_DIR: target/${{ matrix.target }}/release
    steps:
      - uses: actions/checkout@v4
      - name: Setup and install
        uses: ./.github/tooling/setup
        with:
          toolchain: ${{ matrix.target }}
      - name: install dependencies (ubuntu only)
        if: matrix.os == 'ubuntu-latest'
        run: |
          sudo apt-get update
          sudo apt-get install -y libgtk-3-dev libwebkit2gtk-4.0-dev libappindicator3-dev librsvg2-dev patchelf
      - uses: pnpm/action-setup@v2
        with:
          version: 8
      - name: install frontend dependencies
        run: pnpm install
      - uses: Swatinem/rust-cache@v2
        with:
          workspaces: "apps/desktop/src-tauri/target"
      - name: build tauri app
        working-directory: apps/desktop
        run: |
          pnpm tauri build --target ${{ matrix.target }}
      - name: print arti
        working-directory: apps/desktop
        run: |
          ls -hal src-tauri/target/aarch64-apple-darwin
          ls -hal src-tauri/target/aarch64-apple-darwin/release/bundle/macos
          echo "debug: apps/desktop/src-tauri/${{ env.EXE_DIR }}"
          ls "apps/desktop/src-tauri/${{ env.EXE_DIR }}"

      - name: Install certificate (macOS)
        if: matrix.os == 'macos-latest'
        uses: apple-actions/import-codesign-certs@v2
        with:
          p12-file-base64: ${{ secrets.APPLE_CERTIFICATE }}
          p12-password: ${{ secrets.APPLE_CERTIFICATE_PASSWORD }}
      - name: Codesign executable (macOS)
        if: matrix.os == 'macos-latest'
        run: /usr/bin/codesign --force -s "${{ secrets.APPLE_SIGNING_IDENTITY }}" --options=runtime --deep target/aarch64-apple-darwin/release/bundle/macos/overlayed.app -v
        working-directory: "apps/desktop/src-tauri"
      - name: Bundle
        uses: thedoctor0/zip-release@0.7.5
        with:
          type: "zip"
          filename: overlayed-${{ matrix.target }}.zip
          directory: "apps/desktop/src-tauri/${{ env.EXE_DIR }}"
          path: bundle/macos
      - name: Notarize app bundle (macOS)
        if: matrix.os == 'macos-latest'
        working-directory: "apps/desktop/src-tauri"
        run: |
          xcrun notarytool store-credentials "notarytool-profile" --apple-id "${{ secrets.APPLE_ID }}" --team-id="${{ secrets.APPLE_TEAM_ID }}" --password "${{ secrets.APPLE_PASSWORD }}"
          xcrun notarytool submit "apps/desktop/src-tauri/target/aarch64-apple-darwin/release/bundle/macos/overlayed-${{ matrix.target }}.zip" --keychain-profile "notarytool-profile" --wait
