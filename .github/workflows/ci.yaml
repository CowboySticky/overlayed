name: "CI"
on:
  workflow_dispatch:
  push:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build-tauri:
    strategy:
      fail-fast: false
      matrix:
        settings:
          - host: macos-latest
            target: universal-apple-darwin
            toolchain: aarch64-apple-darwin,x86_64-apple-darwin
            bundles: app,dmg
            os: mac
          - host: windows-latest
            target: x86_64-pc-windows-msvc
            toolchain: x86_64-pc-windows-msvc
            bundles: msi,nsis
            os: windows
          - host: ubuntu-latest
            target: x86_64-unknown-linux-gnu
            toolchain: x86_64-unknown-linux-gnu
            bundles: deb,appimage
            os: linux

    runs-on: ${{ matrix.settings.host }}
    steps:
      - uses: actions/checkout@v4
      - name: setup node
        uses: actions/setup-node@v4
        with:
          node-version: 20
      - uses: pnpm/action-setup@v2
        with:
          version: 8
      - name: install Rust stable
        uses: dtolnay/rust-toolchain@stable
        with:
          target: "${{ matrix.settings.toolchain }}"
      - uses: Swatinem/rust-cache@v2
        with:
          workspaces: "apps/desktop/src-tauri/target"
      - name: install dependencies (ubuntu only)
        if: matrix.settings.host == 'ubuntu-latest'
        run: |
          sudo apt-get update
          sudo apt-get install -y libgtk-3-dev libwebkit2gtk-4.0-dev libappindicator3-dev librsvg2-dev patchelf
      - name: install frontend dependencies
        run: pnpm install
      - uses: tauri-apps/tauri-action@v0
        id: build_os
        with:
          projectPath: apps/desktop
          args: --target ${{ matrix.settings.target }} --bundles ${{ matrix.settings.bundles }},updater
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Upload unstable ${{ matrix.setting.os }}
        uses: actions/upload-artifact@v3
        with:
          name: "overlayed-unstable-${{ matrix.settings.os }}"
          path: "${{ join(fromJSON(steps.build_os.outputs.artifactPaths), '\n') }}"
